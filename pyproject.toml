[tool.poetry]
name = "pepperpy-monorepo"
version = "2.0.1"
description = "PepperPy Framework Monorepo"
authors = ["Felipe Pimentel <fpimentel88@gmail.com>"]
include = ["VERSION", "README.md"]
package-mode = false 

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.0.0"
pre-commit = "^4.0.1"
commitizen = "^4.0.0"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
tag_format = "v$version"
version_files = [
    "VERSION",
    "pyproject.toml:^version",
    "packages/*/pyproject.toml:^version",
    "packages/*/VERSION",
]
update_changelog_on_bump = true
changelog_incremental = true
bump_message = "bump: $current_version â†’ $new_version"


[tool.poetry.workspace]
members = [
    "packages/pepperpy-ai",
    "packages/pepperpy-codebase",
    "packages/pepperpy-console",
    "packages/pepperpy-core",
    "packages/pepperpy-files",
    "packages/pepperpy-db",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "B", "I"]
ignore = ["B904"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.poetry.scripts]
lint = "ruff ."
format = "black ."
test = "pytest"
check = "pre-commit run --all-files"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=pepperpy_core --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
implicit_reexport = true
