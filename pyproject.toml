[tool.poetry]
name = "pepperpy"
description = "A modern Python utility library"
authors = ["Felipe Pimentel <fpimentel88@gmail.com>"]
readme = "README.md"
version = "1.2.4"
repository = "https://github.com/felipepimentel/pepperpy"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.9.2"
typer = "^0.12.5"
rich = "^13.9.3"
torch = "^2.2.0"
sentence-transformers = "^2.5.1"
scikit-learn = "^1.4.1"
wandb = "^0.16.3"
textual = "^0.52.1"
questionary = "^2.0.1"
tokenizers = "^0.20.1"
plotext = "^5.3.2"
faiss-cpu = "^1.9.0"
qdrant-client = "^1.12.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.23.5"
black = "^24.10.0"
ruff = "^0.7.1"
mypy = "^1.13.0"
python-semantic-release = "^9.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "E", "F", "B", "I", "N"
]
ignore = [
    "E501",
    "N812",
    "B006",
]
line-length = 100

[tool.ruff.per-file-ignores]
"pepperpy/ai/optimization/*.py" = ["N803"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
show_error_codes = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.semantic_release]
version_variable = [
    "pepperpy/__init__.py:__version__",
    "pyproject.toml:tool.poetry.version"
]
branch = "main"
upload_to_pypi = true
build_command = "poetry build"